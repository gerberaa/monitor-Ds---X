#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–±–æ—Ç–∏ Twitter Monitor Adapter
"""

import asyncio
import logging
from twitter_monitor_adapter import TwitterMonitorAdapter

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_twitter_monitor_adapter():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Twitter Monitor Adapter"""
    print("üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Twitter Monitor Adapter")
    print("=" * 50)
    
    try:
        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∞–¥–∞–ø—Ç–µ—Ä
        print("1. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∞–¥–∞–ø—Ç–µ—Ä–∞...")
        adapter = TwitterMonitorAdapter()
        print("‚úÖ –ê–¥–∞–ø—Ç–µ—Ä —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")
        
        # –¢–µ—Å—Ç—É—î–º–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞
        print("\n2. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞...")
        test_username = "elonmusk"  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤—ñ–¥–æ–º–∏–π –ø—É–±–ª—ñ—á–Ω–∏–π –∞–∫–∞—É–Ω—Ç
        success = adapter.add_account(test_username)
        if success:
            print(f"‚úÖ –ê–∫–∞—É–Ω—Ç @{test_username} –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞ @{test_username}")
            return
        
        # –¢–µ—Å—Ç—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–≤—ñ—Ç—ñ–≤
        print(f"\n3. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–≤—ñ—Ç—ñ–≤ –¥–ª—è @{test_username}...")
        tweets = await adapter.get_user_tweets(test_username, limit=3)
        
        if tweets:
            print(f"‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ {len(tweets)} —Ç–≤—ñ—Ç—ñ–≤:")
            for i, tweet in enumerate(tweets, 1):
                text_preview = tweet['text'][:100] + "..." if len(tweet['text']) > 100 else tweet['text']
                print(f"   {i}. {text_preview}")
                print(f"      üîó {tweet['url']}")
                if tweet.get('images'):
                    print(f"      üì∑ –ó–æ–±—Ä–∞–∂–µ–Ω—å: {len(tweet['images'])}")
                print()
        else:
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ç–≤—ñ—Ç–∏")
            return
        
        # –¢–µ—Å—Ç—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤
        print("4. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤...")
        new_tweets = await adapter.check_new_tweets()
        print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(new_tweets)} –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤")
        
        # –¢–µ—Å—Ç—É—î–º–æ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è
        if tweets:
            print("\n5. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è...")
            notification = adapter.format_tweet_notification(tweets[0])
            print("‚úÖ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –≤—ñ–¥—Ñ–æ—Ä–º–∞—Ç–æ–≤–∞–Ω–æ:")
            print(notification)
        
        print("\nüéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}", exc_info=True)
    
    finally:
        # –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –∞–¥–∞–ø—Ç–µ—Ä
        try:
            await adapter.__aexit__(None, None, None)
            print("\n‚úÖ –ê–¥–∞–ø—Ç–µ—Ä –∑–∞–∫—Ä–∏—Ç–æ")
        except:
            pass

async def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    await test_twitter_monitor_adapter()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
