#!/usr/bin/env python3
"""
–®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç Twitter Monitor Adapter
"""

import asyncio
import sys
import os

# –î–æ–¥–∞—î–º–æ twitter_monitor –¥–æ —à–ª—è—Ö—É
sys.path.append(os.path.join(os.path.dirname(__file__), 'twitter_monitor'))

async def quick_test():
    """–®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ"""
    print("üöÄ –®–≤–∏–¥–∫–∏–π —Ç–µ—Å—Ç Twitter Monitor Adapter")
    print("=" * 45)
    
    try:
        from twitter_monitor_adapter import TwitterMonitorAdapter
        
        # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ –∞–¥–∞–ø—Ç–µ—Ä
        print("1. –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...")
        adapter = TwitterMonitorAdapter()
        print("‚úÖ –ê–¥–∞–ø—Ç–µ—Ä –≥–æ—Ç–æ–≤–∏–π")
        
        # –¢–µ—Å—Ç—É—î–º–æ –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞
        print("\n2. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞...")
        test_user = "elonmusk"  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤—ñ–¥–æ–º–∏–π –ø—É–±–ª—ñ—á–Ω–∏–π –∞–∫–∞—É–Ω—Ç
        if adapter.add_account(test_user):
            print(f"‚úÖ –ê–∫–∞—É–Ω—Ç @{test_user} –¥–æ–¥–∞–Ω–æ")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è @{test_user}")
            return False
        
        # –¢–µ—Å—Ç—É—î–º–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–≤—ñ—Ç—ñ–≤
        print(f"\n3. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–≤—ñ—Ç—ñ–≤...")
        tweets = await adapter.get_user_tweets(test_user, limit=2)
        
        if tweets:
            print(f"‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ {len(tweets)} —Ç–≤—ñ—Ç—ñ–≤")
            for i, tweet in enumerate(tweets, 1):
                preview = tweet['text'][:50] + "..." if len(tweet['text']) > 50 else tweet['text']
                print(f"   {i}. {preview}")
        else:
            print("‚ùå –¢–≤—ñ—Ç–∏ –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω—ñ")
            return False
        
        # –¢–µ—Å—Ç—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤
        print("\n4. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤...")
        new_tweets = await adapter.check_new_tweets()
        print(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(new_tweets)} –Ω–æ–≤–∏—Ö —Ç–≤—ñ—Ç—ñ–≤")
        
        print("\nüéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π—à–ª–∏ —É—Å–ø—ñ—à–Ω–æ!")
        print("\nüìã –ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:")
        print("1. –î–æ–¥–∞–π—Ç–µ —Å–≤—ñ–π Twitter –∞–∫–∞—É–Ω—Ç: cd twitter_monitor && python quick_add_account.py")
        print("2. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –±–æ—Ç–∞: python bot.py")
        print("3. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–æ–º–∞–Ω–¥–∏ /twitter_add, /twitter_test, /twitter_start")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É: {e}")
        print("üí° –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è —â–æ twitter_monitor –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: pip install -r twitter_monitor/requirements.txt")
        return False
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è: {e}")
        return False
    finally:
        try:
            await adapter.__aexit__(None, None, None)
        except:
            pass

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    try:
        result = asyncio.run(quick_test())
        sys.exit(0 if result else 1)
    except KeyboardInterrupt:
        print("\nüëã –¢–µ—Å—Ç –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
